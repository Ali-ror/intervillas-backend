#!/bin/sh
#
# Check for ruby style errors

if [ -t 1 ] && which tput >/dev/null 2>&1; then
  red="$(tput setaf 1)"
  green="$(tput setaf 2)"
  yellow="$(tput setaf 3)"
  normal="$(tput sgr0)"

  rubocop_args="--safe $@"
  fmt="fmt --width=$(tput cols)"
else
  red=""
  green=""
  yellow=""
  normal=""

  rubocop_args="--safe --no-color"
  fmt="cat"
fi

# Redirect output to stderr.
exec 1>&2

# Check if rubocop is installed for the current project
bin/bundle exec rubocop -v >/dev/null 2>&1 || { echo >&2 "${red}[rubocop]: Add rubocop to your Gemfile"; exit 1; }

# Get only the staged files
staged="$(git diff --cached --name-only --diff-filter=AMC HEAD | egrep "\.(rb|jbuilder)$" | tr '\n' ' ')"

if [ -z "${staged}" ]; then
	echo "${green}[rubocop]: No files to check${normal}"
  exit 0
fi

echo "${green}[rubocop]: Checking Ruby Style${normal}"
echo ${staged} | $fmt

if [ ! -f '.rubocop.yml' ]; then
  echo "${yellow}[rubocop]: No .rubocop.yml config file.${normal}"
fi

# Run rubocop on the staged files
bin/bundle exec rubocop $rubocop_args $staged

if [ $? -ne 0 ]; then
  echo "${red}[rubocop]: Fix the issues and commit again${normal}"
  exit 1
fi

exit 0
